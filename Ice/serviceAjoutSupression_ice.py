# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.10
#
# <auto-generated>
#
# Generated from file `serviceAjoutSupression.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module ModuleAjoutSupp
_M_ModuleAjoutSupp = Ice.openModule('ModuleAjoutSupp')
__name__ = 'ModuleAjoutSupp'

_M_ModuleAjoutSupp._t_MonInterface = IcePy.defineValue('::ModuleAjoutSupp::MonInterface', Ice.Value, -1, (), False, True, None, ())

if 'MonInterfacePrx' not in _M_ModuleAjoutSupp.__dict__:
    _M_ModuleAjoutSupp.MonInterfacePrx = Ice.createTempClass()
    class MonInterfacePrx(Ice.ObjectPrx):

        def addSong(self, title, artist, type, dateofrelease, emplacement, context=None):
            return _M_ModuleAjoutSupp.MonInterface._op_addSong.invoke(self, ((title, artist, type, dateofrelease, emplacement), context))

        def addSongAsync(self, title, artist, type, dateofrelease, emplacement, context=None):
            return _M_ModuleAjoutSupp.MonInterface._op_addSong.invokeAsync(self, ((title, artist, type, dateofrelease, emplacement), context))

        def begin_addSong(self, title, artist, type, dateofrelease, emplacement, _response=None, _ex=None, _sent=None, context=None):
            return _M_ModuleAjoutSupp.MonInterface._op_addSong.begin(self, ((title, artist, type, dateofrelease, emplacement), _response, _ex, _sent, context))

        def end_addSong(self, _r):
            return _M_ModuleAjoutSupp.MonInterface._op_addSong.end(self, _r)

        def deleteSong(self, title, context=None):
            return _M_ModuleAjoutSupp.MonInterface._op_deleteSong.invoke(self, ((title, ), context))

        def deleteSongAsync(self, title, context=None):
            return _M_ModuleAjoutSupp.MonInterface._op_deleteSong.invokeAsync(self, ((title, ), context))

        def begin_deleteSong(self, title, _response=None, _ex=None, _sent=None, context=None):
            return _M_ModuleAjoutSupp.MonInterface._op_deleteSong.begin(self, ((title, ), _response, _ex, _sent, context))

        def end_deleteSong(self, _r):
            return _M_ModuleAjoutSupp.MonInterface._op_deleteSong.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_ModuleAjoutSupp.MonInterfacePrx.ice_checkedCast(proxy, '::ModuleAjoutSupp::MonInterface', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_ModuleAjoutSupp.MonInterfacePrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::ModuleAjoutSupp::MonInterface'
    _M_ModuleAjoutSupp._t_MonInterfacePrx = IcePy.defineProxy('::ModuleAjoutSupp::MonInterface', MonInterfacePrx)

    _M_ModuleAjoutSupp.MonInterfacePrx = MonInterfacePrx
    del MonInterfacePrx

    _M_ModuleAjoutSupp.MonInterface = Ice.createTempClass()
    class MonInterface(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Ice::Object', '::ModuleAjoutSupp::MonInterface')

        def ice_id(self, current=None):
            return '::ModuleAjoutSupp::MonInterface'

        @staticmethod
        def ice_staticId():
            return '::ModuleAjoutSupp::MonInterface'

        def addSong(self, title, artist, type, dateofrelease, emplacement, current=None):
            raise NotImplementedError("servant method 'addSong' not implemented")

        def deleteSong(self, title, current=None):
            raise NotImplementedError("servant method 'deleteSong' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_ModuleAjoutSupp._t_MonInterfaceDisp)

        __repr__ = __str__

    _M_ModuleAjoutSupp._t_MonInterfaceDisp = IcePy.defineClass('::ModuleAjoutSupp::MonInterface', MonInterface, (), None, ())
    MonInterface._ice_type = _M_ModuleAjoutSupp._t_MonInterfaceDisp

    MonInterface._op_addSong = IcePy.Operation('addSong', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0), ((), IcePy._t_string, False, 0)), (), ((), IcePy._t_string, False, 0), ())
    MonInterface._op_deleteSong = IcePy.Operation('deleteSong', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), ())

    _M_ModuleAjoutSupp.MonInterface = MonInterface
    del MonInterface

# End of module ModuleAjoutSupp
